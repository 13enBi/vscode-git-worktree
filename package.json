{
    "name": "vscode-git-worktree",
    "displayName": "vscode-git-worktree",
    "description": "",
    "publisher": "13enbi",
    "version": "0.1.2",
    "repository": {},
    "license": "MIT",
    "engines": {
        "vscode": "^1.84.0"
    },
    "categories": [
        "Other"
    ],
    "extensionDependencies": [
        "vscode.git"
    ],
    "activationEvents": [],
    "main": "./dist/extension.js",
    "contributes": {
        "configuration": {
            "title": "git-worktree",
            "properties": {
                "git-worktree.defaultLocation": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "Specifies the default path in which new worktrees will be created",
                    "scope": "resource"
                },
                "git-worktree.openWithWorkspace": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Open with vscode workspace"
                }
            }
        },
        "commands": [
            {
                "command": "git-worktree.list.refresh",
                "title": "Refresh",
                "icon": "$(search-refresh)"
            },
            {
                "command": "git-worktree.item.remove",
                "title": "Remove",
                "icon": "$(notebook-delete-cell)"
            },
            {
                "command": "git-worktree.list.prune",
                "title": "Prune",
                "icon": "$(wand)"
            },
            {
                "command": "git-worktree.list.add",
                "title": "Add",
                "icon": "$(keybindings-add)"
            },
            {
                "command": "git-worktree.item.open",
                "title": "Open Worktree",
                "icon": "$(window)"
            },
            {
                "command": "git-worktree.item.copy",
                "title": "Copy"
            },
            {
                "command": "git-worktree.item.reveal",
                "title": "Reveal in File Explorer"
            },
            {
                "command": "git-worktree.favorites.add",
                "title": "Add Favorites",
                "icon": "$(keybindings-add)"
            },
            {
                "command": "git-worktree.favorites.refresh",
                "title": "Refresh",
                "icon": "$(search-refresh)"
            },
            {
                "command": "git-worktree.favorites.remove",
                "title": "Remove",
                "icon": "$(notebook-delete-cell)"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "git-worktree",
                    "icon": "resources/icon.svg",
                    "title": "Git Worktree 0.1.0"
                }
            ]
        },
        "views": {
            "git-worktree": [
                {
                    "id": "git-worktree-favorites",
                    "name": "Git Worktree Favorites",
                    "icon": "resources/icon.svg"
                },
                {
                    "id": "git-worktree-list",
                    "name": "Git Worktree List",
                    "icon": "resources/icon.svg"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "git-worktree.list.refresh",
                    "group": "navigation",
                    "when": "view == git-worktree-list"
                },
                {
                    "command": "git-worktree.favorites.add",
                    "group": "navigation",
                    "when": "view == git-worktree-favorites"
                },
                {
                    "command": "git-worktree.favorites.refresh",
                    "group": "navigation",
                    "when": "view == git-worktree-favorites"
                }
            ],
            "view/item/context": [
                {
                    "command": "git-worktree.favorites.refresh",
                    "group": "inline",
                    "when": "view == git-worktree-favorites && viewItem == 'worktree-list'"
                },
                {
                    "command": "git-worktree.favorites.remove",
                    "group": "inline",
                    "when": "view == git-worktree-favorites && viewItem == 'worktree-list'"
                },
                {
                    "command": "git-worktree.list.refresh",
                    "group": "inline",
                    "when": "view == git-worktree.list &&  viewItem == 'worktree-list'"
                },
                {
                    "command": "git-worktree.list.prune",
                    "group": "inline",
                    "when": "viewItem == 'worktree-list'"
                },
                {
                    "command": "git-worktree.list.add",
                    "group": "inline",
                    "when": "viewItem == 'worktree-list'"
                },
                {
                    "command": "git-worktree.item.open",
                    "group": "inline",
                    "when": "viewItem == 'worktree-item'"
                },
                {
                    "command": "git-worktree.item.remove",
                    "when": "viewItem == 'worktree-item'"
                },
                {
                    "command": "git-worktree.item.copy",
                    "when": "viewItem =~ /^worktree-item/"
                },
                {
                    "command": "git-worktree.item.reveal",
                    "when": "viewItem =~ /^worktree-item/"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "git-worktree",
                "contents": "A Git repository was found in the parent folders of the workspace or the open file(s).\n[Open Repository](command:git.openRepositoriesInParentFolders)\nUse the [git.openRepositoryInParentFolders](command:workbench.action.openSettings?%5B%22git.openRepositoryInParentFolders%22%5D) setting to control whether Git repositories in parent folders of workspaces or open files are opened. To learn more [read our docs](https://aka.ms/vscode-git-repository-in-parent-folders).",
                "when": "config.git.enabled && !git.missing && git.state == initialized && git.parentRepositoryCount == 1"
            }
        ]
    },
    "scripts": {
        "build": "pnpm vsce package --no-dependencies",
        "vscode:prepublish": "pnpm run package",
        "compile": "webpack",
        "watch": "webpack --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
        "test": "node ./out/test/runTest.js",
        "format": "prettier --write \"./**/*.ts\""
    },
    "devDependencies": {
        "@types/lodash": "^4.14.202",
        "@types/lodash-es": "^4.17.12",
        "@types/mocha": "^10.0.3",
        "@types/node": "18.x",
        "@types/vscode": "^1.84.0",
        "@vscode/test-electron": "^2.3.6",
        "@vscode/vsce": "^2.22.0",
        "glob": "^10.3.10",
        "mocha": "^10.2.0",
        "prettier": "^3.1.0",
        "ts-loader": "^9.5.0",
        "typescript": "^5.2.2",
        "webpack": "^5.89.0",
        "webpack-cli": "^5.1.4"
    },
    "dependencies": {
        "execa": "^8.0.1",
        "lodash": "^4.17.21",
        "ts-pattern": "^5.0.5"
    }
}
